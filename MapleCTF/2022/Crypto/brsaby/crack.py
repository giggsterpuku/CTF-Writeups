#!/usr/bin/env python3

#################################################################### Write-Up #######################################################################
# Challenge: brsaby
# Category: Crypto
# Description: I put the rsa in the baby. Or did I put the baby in the rsa? Either of those things sounds illegal.
#
# Nothing too extra in terms of learning RSA, but here it took me a long time to figure out how to grab p and q with the hint (a fat polynomial). At
# first I thought of trying to factorize the polynomial like what I did for Sum O' Squares chall from picoCTF 2022, but nothing from the Internet
# showed up. I looked at the CTF server for hints, and some competitors mentioned using Alpetron (calculator site) or z3, and I though big bren they
# are smart. So, I used z3 to solve for p and q and then the rest is traditional RSA.
#
# Flag: maple{s0lving_th3m_p3rf3ct_r000ts_1s_fun}
# Solved by giggsterpuku 19 hrs in
#####################################################################################################################################################

from Crypto.Util.number import long_to_bytes
from z3 import *
from sympy import mod_inverse

N = 134049493752540418773065530143076126635445393203564220282068096099004424462500237164471467694656029850418188898633676218589793310992660499303428013844428562884017060683631593831476483842609871002334562252352992475614866865974358629573630911411844296034168928705543095499675521713617474013653359243644060206273
e = 65537
enc = 110102068225857249266317472106969433365215711224747391469423595211113736904624336819727052620230568210114877696850912188601083627767033947343144894754967713943008865252845680364312307500261885582194931443807130970738278351511194280306132200450370953028936210150584164591049215506801271155664701637982648648103
hint = 20172108941900018394284473561352944005622395962339433571299361593905788672168045532232800087202397752219344139121724243795336720758440190310585711170413893436453612554118877290447992615675653923905848685604450760355869000618609981902108252359560311702189784994512308860998406787788757988995958832480986292341328962694760728098818022660328680140765730787944534645101122046301434298592063643437213380371824613660631584008711686240103416385845390125711005079231226631612790119628517438076962856020578250598417110996970171029663545716229258911304933901864735285384197017662727621049720992964441567484821110407612560423282

# Use z3 to get p and q using equations
p = Int('p')
q = Int('q')
s = Solver()
s.add(p**4 - q**3 == hint)
s.add(p * q == N)
s.check()
print(s.model())

q = 11248052945492193606877386307812298309646455365482356576580845624056836046347518805927852646289457003475918197991787867864250859819603651806169306473552239
p = 11917573148183173444338385104784582231114229409447057112131253050235068806316496452352116287542988361044359262597423159386263430710183647113674868056755407
phi = (p - 1) * (q - 1)
d = mod_inverse(e, phi)
m = pow(enc, d, N)
msg = long_to_bytes(m)
print(msg)
