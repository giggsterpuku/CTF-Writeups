Challenge: function overwrite
Category: Binary Exploitation
Description: Story telling class 2/2 You can point to all kinds of things in C. Checkout our function pointers demo program. You can view source here. And connect with it using nc saturn.picoctf.net 51558
Hints:
	-1: Don't be so negative

I remember from a picoCTF 2019 chall (L1m1tl355) that C programs do not check
the array bounds of an index; you can literall give it any number. That was the
vuln in this chall, and with it you can make an arbitrary write on the stack.
The way I used the arbitrary write was to change the function pointer check()
to point to another address so that when check() is called, it goes to it
instead of hard_checker(). I tried two different address to change check() to:
easy_checker() and an address in hard-checker() that completely bypasses the
calculate_story_score() check. After fishing around for a negative index
(since the program allows for indexes < 10), I found the index of check() to
be at -16, and from there I calculated the offsets between the hard_checker()
addr and the target ones to change the addr in check() to those. With
appropriate inputs I was able to get the program to spit the flag.
Payload cmds were:
(echo <anything>; echo -16; echo 47) | nc  saturn.picoctf.net 51558 for check bypasser
(echo zzzzzzzzzzu; echo -16; echo -314) | nc  saturn.picoctf.net 51558 for easy_checker() (zzzzzzzzzzu string can be replaced by any string  <= 128 chars whose chars add up to 1337)


Flag: picoCTF{0v3rwrit1ng_P01nt3rs_53614882}
Points: 400
Solved by giggsterpuku 5 days into comp
