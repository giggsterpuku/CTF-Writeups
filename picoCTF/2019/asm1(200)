asm1:
	<+0>:	push   ebp
	<+1>:	mov    ebp,esp
	<+3>:	cmp    DWORD PTR [ebp+0x8],0x767 ;ebp+0x8 is 0x1f3
	<+10>:	jg     0x512 <asm1+37>		 ;continues on
	<+12>:	cmp    DWORD PTR [ebp+0x8],0x1f3
	<+19>:	jne    0x50a <asm1+29>		 ;continues on
	<+21>:	mov    eax,DWORD PTR [ebp+0x8]   ;eax is now 0x1f3
	<+24>:	add    eax,0xb			 ;0x1f3+0xb=0x1fe
	<+27>:	jmp    0x529 <asm1+60>		 ;now it jumps to step <+60>
	<+29>:	mov    eax,DWORD PTR [ebp+0x8]
	<+32>:	sub    eax,0xb
	<+35>:	jmp    0x529 <asm1+60>
	<+37>:	cmp    DWORD PTR [ebp+0x8],0xcde
	<+44>:	jne    0x523 <asm1+54>
	<+46>:	mov    eax,DWORD PTR [ebp+0x8]
	<+49>:	sub    eax,0xb
	<+52>:	jmp    0x529 <asm1+60>
	<+54>:	mov    eax,DWORD PTR [ebp+0x8]
	<+57>:	add    eax,0xb
	<+60>:	pop    ebp			; essentially code ends here
	<+61>:	ret    

;Flag: 0x1fe
