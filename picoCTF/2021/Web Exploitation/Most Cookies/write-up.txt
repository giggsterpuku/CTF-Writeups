Challenge: Most Cookies
Category: Web Exploitation
Description: Alright, enough of using my own encryption. Flask session cookies should be plenty secure!
Hints:
	-1: How secure is a flask cookie?

Looking at server.py, it looks like the goal of the chall is the change a cookie named "very_auth" to have the value "admin" to get the flag. Looking
at the website, there is a session cookie, which has what looks like an encoded/encrypted value. I was a little confused why the session cookie isn't
named "very_auth," so I made tried to forge a "very_auth" cookie, but that didn't work. I then considered the hint, and I looked up "flask cookie
security," and it led me to a cookie forging utility named flask-unsign, and I read the documentation to forge the cookie and replace the value in
the session cookie with it, allowing me to get the flag. But, for the sake of learning, I looked up why my exploit worked. I found this article,
which is from the same dude made it: https://blog.paradoxis.nl/defeating-flasks-session-management-65706ba9d3ce. So basically, to explain how the
Flask cookie is crafted according to server.py is that it is signed, meaning it is checked for a hash to verify it is good in order to use it on the
website. In addition, the contents of the session cookie actually hold the base64-encoded data of the "very_auth" cookie in it along with a SHA1 hash
to verify it is valid for use. The hash is made from a designated secret key, which on the server is one of the cookie names listed in server.py. So,
using the tool I found, I made it first decrypt the contentes of the session cookie, which I verified had the "very_auth" data. Next, using the
cookie names as a wordlist, I bruteforced the secret key using the tool, which I found to be 'fortune'. Lastly, I had it forge a cookie with the
necessary contents and signed it with the secret key. Sending that session cookie data to the server, I refreshed the page and got the flag. So, moral
of the chall is that Flask cookies can be signed with built-in functionalities, but they aren't encrypted. Thus, the cookie is not as secure as it
could be.

Flag: picoCTF{pwn_4ll_th3_cook1E5_743c20eb}
Solved by giggsterpuku in picoGym
